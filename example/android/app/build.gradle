plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def aarDir = "${rootProject.projectDir.path}/../../android/libs"

android {
    signingConfigs {
        release {
            storeFile file('/Users/lipeng/Desktop/360上架/keystore.jks')
            storePassword 'peng123456'
            keyAlias 'peng'
            keyPassword 'peng123456'
        }
    }
    namespace "com.pengsheng.game"
    compileSdk flutter.compileSdkVersion
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.pengsheng.game"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 21//flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.release
        }
    }
}

repositories  {
    flatDir {
        dirs aarDir
    }
}

dependencies {
    implementation fileTree(include: ['*.jar','*.aar'], dir: 'libs')
//    def file = new File(aarDir)
//    file.listFiles(new FilenameFilter() {
//        @Override
//        boolean accept(File dir, String name) {
//            return name.endsWith("aar")
//        }
//    }).each { f ->
//        def aar = f.name.split("\\.").first()
//        println("f.name = ${f.name} , aar = $aar")
//        api(name: f.name.split("\\.").first(), ext: 'aar')
//    }
    implementation("com.google.android.gms:play-services-ads:17.2.0") {
        exclude group: 'com.android.support'
    }
//    implementation(name: "Baidu_MobAds_SDK_v9.35", ext: 'aar')
//    implementation(name: "GDTSDK.unionNormal.4.570.1440", ext: 'aar')
//    implementation(name: "klevinSDK_2.11.0.3", ext: 'aar')
////    implementation(name: "kssdk-ad-3.3.63", ext: 'aar')
//    implementation(name: "windAd-4.16.0", ext: 'aar')
//    implementation(name: "windAd-common-1.6.2", ext: 'aar')
////    implementation(name: "unity-ads-4.3.0", ext: 'aar')
//    implementation(name: "mbridge_chinasame_16.6.57", ext: 'aar')
//    implementation(name: "mbridge_dycreator_16.6.57", ext: 'aar')
//    implementation(name: "mbridge_interstitial_16.6.57", ext: 'aar')
//    implementation(name: "mbridge_interstitialvideo_16.6.57", ext: 'aar')
//    implementation(name: "mbridge_mbbanner_16.6.57", ext: 'aar')
//    implementation(name: "mbridge_mbbid_16.6.57", ext: 'aar')
//    implementation(name: "mbridge_mbjscommon_16.6.57", ext: 'aar')
//    implementation(name: "mbridge_mbnative_16.6.57", ext: 'aar')
//    implementation(name: "mbridge_mbnativeadvanced_16.6.57", ext: 'aar')
//    implementation(name: "mbridge_mbsplash_16.6.57", ext: 'aar')
//    implementation(name: "mbridge_nativeex_16.6.57", ext: 'aar')
//    implementation(name: "mbridge_newinterstitial_16.6.57", ext: 'aar')
//    implementation(name: "mbridge_playercommon_16.6.57", ext: 'aar')
//    implementation(name: "mbridge_reward_16.6.57", ext: 'aar')
//    implementation(name: "mbridge_videocommon_16.6.57", ext: 'aar')
//    implementation(name: "mbridge_videojs_16.6.57", ext: 'aar')
//    implementation(name: "mediation_admob_adapter_17.2.0.57", ext: 'aar')
//    implementation(name: "mediation_baidu_adapter_9.35.0", ext: 'aar')
//    implementation(name: "mediation_gdt_adapter_4.570.1440.1", ext: 'aar')
//    implementation(name: "mediation_klevin_adapter_2.11.0.3.18", ext: 'aar')
//    implementation(name: "mediation_ks_adapter_3.3.63.1", ext: 'aar')
//    implementation(name: "mediation_mintegral_adapter_16.6.57.0", ext: 'aar')
//    implementation(name: "mediation_sigmob_adapter_4.16.0.0", ext: 'aar')
//    implementation(name: "mediation_unity_adapter_4.3.0.24", ext: 'aar')

    //测试工具
//    implementation(name: 'tools-release', ext: 'aar')
//    implementation(name: 'open_ad_sdk', ext: 'aar')
}

flutter {
    source '../..'
}
